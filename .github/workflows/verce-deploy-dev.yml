name: Deploy and Coverage

on:
  push:
    branches:
      - dev

jobs:
  trigger-vercel-deploy:
    runs-on: ubuntu-latest
    services:
      db_test:
        image: postgres:17
        env:
          POSTGRES_DB: bambin_test
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
        ports:
          - 5435:5432
        options: >-
          --health-cmd="pg_isready -U test"
          --health-interval=2s
          --health-timeout=2s
          --health-retries=10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Install Vercel CLI
        run: npm install -g vercel
      - name: Run unit tests
        run: npm run test:unit -- --run
      - name: Wait for DB to be ready
        run: |
          until pg_isready -h localhost -p 5435 -U test; do
            sleep 1
          done
      - name: Start server
        run: vercel dev --listen 3000 --token ${{ secrets.VERCEL_TOKEN }} &
      - name: Wait for server to be ready
        run: |
          for i in {1..20}; do
            if curl -s http://localhost:3000/api/users | grep -q "^\["; then
              echo "API ready !"
              exit 0
            fi
            echo "Waiting for API..."
            sleep 2
          done
          echo "API not ready after 40s"
          exit 1
      - name: User rights
        run: chmod +x test-with-db.sh
      - name: Run DB orchestration and tests
        env:
          DATABASE_URL_TEST: postgres://test:test@localhost:5435/bambin_test
        run: ./test-with-db.sh
      - name: Trigger Vercel Deploy Hook
        if: success()
        run: |
          curl -X POST "${{ secrets.VERCEL_DEPLOY_HOOK }}"
  coverage-to-external-gh-pages:
    name: Publier sur Coverage_bambin
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Run unit tests and generate coverage
        run: npm run test:unit -- --run
      - name: Deploy coverage to external repo
        uses: peaceiris/actions-gh-pages@v4
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          external_repository: felikarina/Coverage_bambin
          publish_dir: ./coverage
          publish_branch: gh-pages
